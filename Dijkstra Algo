#include <limits.h> 
#include <stdio.h>
#define MAX 20
int V, E;
int graph[MAX][MAX];
#define INFINITY 99999

void dijkstra(int G[MAX][MAX], int n, int startnode) {
	int dist[MAX], vis[MAX] = {0};
	int p[MAX];
	int i,j,c,min,u;
	for(i=1; i<=n;i++){
		dist[i] = INFINITY;
		p[i] = -1;
	}
	dist[startnode]=0;
	for(c=1;c<=n;c++){
		min = INFINITY;
		u=-1;
		for(i=1; i<=n; i++){
			if(!vis[i] && dist[i]<=min){
				min = dist[i];
				u = i;
			}
		}
		if(u==-1){
			break;
		}
		vis[u] = 1;
		for(i=1;i<=n;i++){
			if(!vis[i] && G[u][i] && dist[u]+G[u][i]<dist[i]){
				dist[i] = dist[u] + G[u][i];
				p[i]=u;
			}
		}
	}
	printf("Node\tDistance\tPath\n");
	for(i=1;i<=n;i++){
		if(i!=startnode){
			printf("   %d\t",i);
			if(dist[i]==INFINITY){
				printf("     INF\tNO PATH\n");
			}
			else{
				printf("       %d\t",dist[i]);
				int stk[MAX], top=0, v=i;
				while(v!=-1){
					stk[top++] = v;
					v = p[v];
				}
				for(j=0;j<top;j++){
					printf("%d",stk[j]);
					if(j!=top-1) printf("<-");
				}
				printf("\n");
			}
		}
	}
}
int main() { 
	int s, d, w, i, j;
	printf("Enter the number of vertices : ");
	scanf("%d", &V);
	printf("Enter the number of edges : ");
	scanf("%d", &E);
	for(i = 1 ; i <= V; i++) {
		for(j = 1; j <= V; j++) {
			graph[i][i] = 0;
		}
	}
	for(i = 1; i <= E; i++) {
		printf("Enter source : ");
		scanf("%d", &s);
		printf("Enter destination : ");
		scanf("%d", &d);
		printf("Enter weight : ");
		scanf("%d", &w);
		if(s > V || d > V || s <= 0 || d <= 0) {
			printf("Invalid index. Try again.\n");
			i--;
			continue;
		} else {
			graph[s][d] = w;
		}
	}
	printf("Enter the source :");
	scanf("%d", &s);
	dijkstra(graph, V, s); 
	return 0; 
} 
